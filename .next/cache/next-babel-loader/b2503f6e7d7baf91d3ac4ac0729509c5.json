{"ast":null,"code":"import _defineProperty from \"/Users/tejasbaid/Desktop/Projects/Web Projects/thullo/thullo-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/tejasbaid/Desktop/Projects/Web Projects/thullo/thullo-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tejasbaid/Desktop/Projects/Web Projects/thullo/thullo-client/pages/board.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react';\nimport { Header } from \"../components/Header/Header\";\nimport { BoardHeader } from \"../components/BoardPage/BoardHeader/BoardHeader\";\nimport { BoardColumn } from \"../components/BoardPage/BoardColumn/BoardColumn\";\nimport { BoardContext } from \"../Context/BoardContext\";\nimport { AddCardButton } from \"../components/BoardPage/AddCardButton/AddCardButton\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { onDragEnd as _onDragEnd } from \"../Helpers/KanbanHelper\";\nimport uuid from 'react-uuid';\n\nvar BoardPage = function BoardPage() {\n  _s();\n\n  var _useContext = useContext(BoardContext),\n      board = _useContext.board,\n      setBoard = _useContext.setBoard;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-page\",\n      children: [/*#__PURE__*/_jsxDEV(BoardHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: function onDragEnd(result) {\n          return _onDragEnd(result, board, setBoard);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board\",\n          children: [Object.entries(board).map(function (_ref, index) {\n            var _ref2 = _slicedToArray(_ref, 2),\n                columnId = _ref2[0],\n                column = _ref2[1];\n\n            return /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: columnId,\n              children: function children(provided, snapshot) {\n                return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, provided.draggableProps), {}, {\n                  ref: provided.innerRef,\n                  children: [/*#__PURE__*/_jsxDEV(BoardColumn, {\n                    name: column.name,\n                    items: column.items,\n                    id: columnId\n                  }, columnId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 26,\n                    columnNumber: 49\n                  }, _this), provided.placeholder]\n                }), columnId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 45\n                }, _this);\n              }\n            }, uuid(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 33\n            }, _this);\n          }), /*#__PURE__*/_jsxDEV(AddCardButton, {\n            type: \"column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(BoardPage, \"w5OIbZCY+3Mdm1rFQkkev8pgX5A=\");\n\n_c = BoardPage;\nexport default BoardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardPage\");","map":{"version":3,"sources":["/Users/tejasbaid/Desktop/Projects/Web Projects/thullo/thullo-client/pages/board.jsx"],"names":["React","useContext","Header","BoardHeader","BoardColumn","BoardContext","AddCardButton","DragDropContext","Droppable","onDragEnd","uuid","BoardPage","board","setBoard","result","Object","entries","map","index","columnId","column","provided","snapshot","draggableProps","innerRef","name","items","placeholder"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,MAAR,QAAqB,6BAArB;AACA,SAAQC,WAAR,QAA0B,iDAA1B;AACA,SAAQC,WAAR,QAA0B,iDAA1B;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SAAQC,aAAR,QAA4B,qDAA5B;AACA,SAAQC,eAAR,EAAyBC,SAAzB,QAAyC,qBAAzC;AACA,SAAQC,SAAS,IAATA,UAAR,QAAwB,yBAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,oBACKV,UAAU,CAACI,YAAD,CADf;AAAA,MACbO,KADa,eACbA,KADa;AAAA,MACPC,QADO,eACPA,QADO;;AAEpB,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAE,mBAACC,MAAD;AAAA,iBAAYL,UAAS,CAACK,MAAD,EAAQF,KAAR,EAAcC,QAAd,CAArB;AAAA,SAA5B;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,qBAEYE,MAAM,CAACC,OAAP,CAAeJ,KAAf,EAAsBK,GAAtB,CAA0B,gBAAqBC,KAArB;AAAA;AAAA,gBAAEC,QAAF;AAAA,gBAAYC,MAAZ;;AAAA,gCACtB,QAAC,SAAD;AAAwB,cAAA,WAAW,EAAED,QAArC;AAAA,wBACK,kBAACE,QAAD,EAAUC,QAAV,EAAuB;AACpB,oCACI,+CAAwBD,QAAQ,CAACE,cAAjC;AAAiD,kBAAA,GAAG,EAAEF,QAAQ,CAACG,QAA/D;AAAA,0CACI,QAAC,WAAD;AAA4B,oBAAA,IAAI,EAAEJ,MAAM,CAACK,IAAzC;AAA+C,oBAAA,KAAK,EAAEL,MAAM,CAACM,KAA7D;AAAoE,oBAAA,EAAE,EAAEP;AAAxE,qBAAkBA,QAAlB;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEKE,QAAQ,CAACM,WAFd;AAAA,oBAAUR,QAAV;AAAA;AAAA;AAAA;AAAA,yBADJ;AAMH;AARL,eAAgBT,IAAI,EAApB;AAAA;AAAA;AAAA;AAAA,qBADsB;AAAA,WAA1B,CAFZ,eAiBI,QAAC,aAAD;AAAe,YAAA,IAAI,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,mBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AA6BH,CA/BD;;GAAMC,S;;KAAAA,S;AAiCN,eAAeA,SAAf","sourcesContent":["import React, {useContext} from 'react'\nimport {Header} from \"../components/Header/Header\";\nimport {BoardHeader} from \"../components/BoardPage/BoardHeader/BoardHeader\";\nimport {BoardColumn} from \"../components/BoardPage/BoardColumn/BoardColumn\";\nimport {BoardContext} from \"../Context/BoardContext\";\nimport {AddCardButton} from \"../components/BoardPage/AddCardButton/AddCardButton\";\nimport {DragDropContext, Droppable} from \"react-beautiful-dnd\";\nimport {onDragEnd} from \"../Helpers/KanbanHelper\";\nimport uuid from 'react-uuid'\n\nconst BoardPage = () => {\n    const {board,setBoard} = useContext(BoardContext)\n    return(\n        <div className=\"board-page-container\">\n            <Header />\n            <div className=\"board-page\">\n                <BoardHeader />\n                <DragDropContext onDragEnd={(result) => onDragEnd(result,board,setBoard)}  >\n                <div className=\"board\">\n                        {\n                            Object.entries(board).map(([columnId, column], index) => (\n                                <Droppable key={uuid()} droppableId={columnId}  >\n                                    {(provided,snapshot) => {\n                                        return (\n                                            <div key={columnId} {...provided.draggableProps} ref={provided.innerRef}>\n                                                <BoardColumn key={columnId} name={column.name} items={column.items} id={columnId} />\n                                                {provided.placeholder}\n                                            </div>\n                                        )\n                                    }}\n                                    </Droppable>\n\n                            ))\n                        }\n\n                    <AddCardButton type=\"column\" />\n                </div>\n                </DragDropContext>\n            </div>\n        </div>\n    )\n}\n\nexport default BoardPage\n"]},"metadata":{},"sourceType":"module"}